<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
	<variable name="logfolder" value="${gdc:item=logfolder}" />
	<targets>
		<target name="managementConsole" xsi:type="ManagementConsole"
		        layout="${date:format=HH\:mm\:ss.fff} ${level} [${threadid}][${threadname}] [${logger:shortName=true}] ${message} ${exception:format=tostring}" />
		<target name="asyncFileWriter" xsi:type="AsyncWrapper">
			<target name="logfile" xsi:type="File" autoFlush="true" encoding="utf-8" fileName="${logfolder}\${shortdate}.log"
			        layout="${longdate} ${uppercase:inner=${pad:padCharacter= :padding=-5:inner=${level}}} [${threadid}][${threadname}] [${logger:shortName=true}] ${message} ${exception:format=tostring}" />
		</target>

		<target name="asyncConsole" xsi:type="AsyncWrapper">
			<target name="consoleLogging" xsi:type="SplitGroup">
				<target xsi:type="FilteringWrapper" name="instancesFilter"
				        condition="logger!='Inceptum.AppServer.Logging.LogCache'">
					<target name="server" xsi:type="ColoredConsole"
					        layout="${date:format=HH\:mm\:ss.fff} ${uppercase:inner=${pad:padCharacter= :padding=-5:inner=${level}}} [${threadid}][${threadname}] [${logger:shortName=true}] ${message} ${exception:format=tostring}"
					        useDefaultRowHighlightingRules="false">
						<highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
						<highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
						<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
						<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
						<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
					</target>
				</target>
				<target xsi:type="FilteringWrapper" name="instancesFilter"
				        condition="logger=='Inceptum.AppServer.Logging.LogCache'">
					<target name="instances" xsi:type="ColoredConsole" layout="${message}"
					        useDefaultRowHighlightingRules="false">
						<highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
						<highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
						<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
						<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
						<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
						<highlight-word foregroundColor="Blue" regex="^.*?:" />
					</target>
				</target>
			</target>
		</target>

		<target name="asyncDebug" xsi:type="AsyncWrapper">
			<target name="debug" xsi:type="Debug"
			        layout="${date:format=HH\:mm\:ss.fff} ${level} [${threadid}][${threadname}] [${logger:shortName=true}] ${message} ${exception:format=tostring}" />
		</target>

		<target name="null" xsi:type="Null" />
	</targets>

	<rules>
		<logger name="*" minlevel="Debug" writeTo="asyncFileWriter" />
		<logger name="*" minlevel="Debug" writeTo="asyncConsole" />
		<logger name="*" minlevel="Trace" writeTo="asyncDebug" />
		<logger name="*" minlevel="Trace" writeTo="managementConsole" />
	</rules>

</nlog>